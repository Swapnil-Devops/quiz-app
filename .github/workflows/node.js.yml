
name: Node.js CI

on:
  push:
    branches: [ master, development ]

jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [14.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: npm test
    

  params:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    
    outputs:
      package_name:                   ${{ steps.inputs.outputs.package.name }}
      crucible-registry:              ${{ steps.inputs.outputs.crucible_registry }}
      base-registry:                  ${{ steps.inputs.outputs.base_registry }}
      base-img-name:                  ${{ steps.inputs.outputs.base_image_name }}
      base-img-tag:                   ${{ steps.inputs.outputs.base_image_tag }}
    
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - name: Get Inputs
        id:   inputs
        uses: zoexx/github-action-json-file-properties@release
        with:
          file_path: "./recipe/cmake.json"
#           prop_path: "package.name"

      - name: Echo Inputs
        run: |
          echo ${{steps.inputs.outputs.value}}
          
#   read-json-file:
#       runs-on: ubuntu-latest

#       steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2

#         - name: Install jq
#           run: sudo apt-get install -y jq

#         - name: Read JSON file
#           id: read-json
#           run: |
#             file_contents=$(cat ./recipe/cmake.json)
#             echo "::set-output name=json::$file_contents"

#         - name: Extract values from JSON
#           run: |
#             package_kind=$(echo "${{ steps.read-json.outputs.json }}" | jq -r '.package.kind')
#             package_name=$(echo "${{ steps.read-json.outputs.json }}" | jq -r '.package.name')
#             substrate_name=$(echo "${{ steps.read-json.outputs.json }}" | jq -r '.substrate.name')

#             echo "Package kind: $package_kind"
#             echo "Package name: $package_name"
#             echo "Substrate name: $substrate_name"
          
